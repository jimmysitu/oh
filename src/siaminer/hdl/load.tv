// vim:ft=verilog ts=4
module load(/*AUTOARG*/);
    input   clk;
    input   rst;
    input             valid;    // new work is valid
    input   [639:0]   work;     // 80B work data
% for i in range(0, 16):    
    output  [64:0]    m${"%02d" % i};
% endfor
    
    /*AUTOWIRE*/
    /*AUTOREG*/

<%
rstStr = ""
comStr = ""
for i in range(0, 16):
    if i == 15:
        rstStr += "\t\t\tm%02d <= 64'h0;" % i
        comStr += "\t\t\tm%02d <= m%02d;" % (i, i)
    elif i == 4:
        rstStr += "\t\t\tm%02d <= 64'h0;\n" % i
        comStr += "\t\t\tm%02d <= m%02d + 64'h1;\n" % (i, i)
    elif i > 9:
        rstStr += "\t\t\tm%02d <= 64'h0;\n" % i
        comStr += "\t\t\tm%02d <= m%02d;\n" % (i, i)
    else:
        rstStr += "\t\t\tm%02d <= work[%4d: %4d];\n" % (i, (64*(i+1)-1), (64*i))
        comStr += "\t\t\tm%02d <= m%02d;\n" % (i, i)
%>
    always @(posedge clk) begin
        if(rst | valid) begin
${rstStr}
        end else begin
${comStr}
        end
    end
endmodule
